{"format": "torch", "nodes": [{"name": "module", "id": 139953403721616, "class_name": "UNet(\n  (inc): DoubleConv(\n    (double_conv): Sequential(\n      (0): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n      (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (2): ReLU(inplace=True)\n      (3): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n      (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (5): ReLU(inplace=True)\n    )\n  )\n  (down1): Down(\n    (maxpool_conv): Sequential(\n      (0): MaxPool3d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (1): DoubleConv(\n        (double_conv): Sequential(\n          (0): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n          (3): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (4): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (5): ReLU(inplace=True)\n        )\n      )\n    )\n  )\n  (down2): Down(\n    (maxpool_conv): Sequential(\n      (0): MaxPool3d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (1): DoubleConv(\n        (double_conv): Sequential(\n          (0): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n          (3): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (4): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (5): ReLU(inplace=True)\n        )\n      )\n    )\n  )\n  (down3): Down(\n    (maxpool_conv): Sequential(\n      (0): MaxPool3d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (1): DoubleConv(\n        (double_conv): Sequential(\n          (0): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n          (3): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (4): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (5): ReLU(inplace=True)\n        )\n      )\n    )\n  )\n  (down4): Down(\n    (maxpool_conv): Sequential(\n      (0): MaxPool3d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (1): DoubleConv(\n        (double_conv): Sequential(\n          (0): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (2): ReLU(inplace=True)\n          (3): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n          (4): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (5): ReLU(inplace=True)\n        )\n      )\n    )\n  )\n  (up1): Up(\n    (up): Upsample(scale_factor=2.0, mode=trilinear)\n    (conv): DoubleConv(\n      (double_conv): Sequential(\n        (0): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU(inplace=True)\n        (3): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (4): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU(inplace=True)\n      )\n    )\n  )\n  (up2): Up(\n    (up): Upsample(scale_factor=2.0, mode=trilinear)\n    (conv): DoubleConv(\n      (double_conv): Sequential(\n        (0): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU(inplace=True)\n        (3): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (4): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU(inplace=True)\n      )\n    )\n  )\n  (up3): Up(\n    (up): Upsample(scale_factor=2.0, mode=trilinear)\n    (conv): DoubleConv(\n      (double_conv): Sequential(\n        (0): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU(inplace=True)\n        (3): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU(inplace=True)\n      )\n    )\n  )\n  (up4): Up(\n    (up): Upsample(scale_factor=2.0, mode=trilinear)\n    (conv): DoubleConv(\n      (double_conv): Sequential(\n        (0): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU(inplace=True)\n        (3): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))\n        (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU(inplace=True)\n      )\n    )\n  )\n  (outc): OutConv(\n    (conv): Conv3d(32, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n  )\n)", "parameters": [["inc.double_conv.0.weight", [32, 1, 3, 3, 3]], ["inc.double_conv.0.bias", [32]], ["inc.double_conv.1.weight", [32]], ["inc.double_conv.1.bias", [32]], ["inc.double_conv.3.weight", [32, 32, 3, 3, 3]], ["inc.double_conv.3.bias", [32]], ["inc.double_conv.4.weight", [32]], ["inc.double_conv.4.bias", [32]], ["down1.maxpool_conv.1.double_conv.0.weight", [64, 32, 3, 3, 3]], ["down1.maxpool_conv.1.double_conv.0.bias", [64]], ["down1.maxpool_conv.1.double_conv.1.weight", [64]], ["down1.maxpool_conv.1.double_conv.1.bias", [64]], ["down1.maxpool_conv.1.double_conv.3.weight", [64, 64, 3, 3, 3]], ["down1.maxpool_conv.1.double_conv.3.bias", [64]], ["down1.maxpool_conv.1.double_conv.4.weight", [64]], ["down1.maxpool_conv.1.double_conv.4.bias", [64]], ["down2.maxpool_conv.1.double_conv.0.weight", [128, 64, 3, 3, 3]], ["down2.maxpool_conv.1.double_conv.0.bias", [128]], ["down2.maxpool_conv.1.double_conv.1.weight", [128]], ["down2.maxpool_conv.1.double_conv.1.bias", [128]], ["down2.maxpool_conv.1.double_conv.3.weight", [128, 128, 3, 3, 3]], ["down2.maxpool_conv.1.double_conv.3.bias", [128]], ["down2.maxpool_conv.1.double_conv.4.weight", [128]], ["down2.maxpool_conv.1.double_conv.4.bias", [128]], ["down3.maxpool_conv.1.double_conv.0.weight", [256, 128, 3, 3, 3]], ["down3.maxpool_conv.1.double_conv.0.bias", [256]], ["down3.maxpool_conv.1.double_conv.1.weight", [256]], ["down3.maxpool_conv.1.double_conv.1.bias", [256]], ["down3.maxpool_conv.1.double_conv.3.weight", [256, 256, 3, 3, 3]], ["down3.maxpool_conv.1.double_conv.3.bias", [256]], ["down3.maxpool_conv.1.double_conv.4.weight", [256]], ["down3.maxpool_conv.1.double_conv.4.bias", [256]], ["down4.maxpool_conv.1.double_conv.0.weight", [256, 256, 3, 3, 3]], ["down4.maxpool_conv.1.double_conv.0.bias", [256]], ["down4.maxpool_conv.1.double_conv.1.weight", [256]], ["down4.maxpool_conv.1.double_conv.1.bias", [256]], ["down4.maxpool_conv.1.double_conv.3.weight", [256, 256, 3, 3, 3]], ["down4.maxpool_conv.1.double_conv.3.bias", [256]], ["down4.maxpool_conv.1.double_conv.4.weight", [256]], ["down4.maxpool_conv.1.double_conv.4.bias", [256]], ["up1.conv.double_conv.0.weight", [256, 512, 3, 3, 3]], ["up1.conv.double_conv.0.bias", [256]], ["up1.conv.double_conv.1.weight", [256]], ["up1.conv.double_conv.1.bias", [256]], ["up1.conv.double_conv.3.weight", [128, 256, 3, 3, 3]], ["up1.conv.double_conv.3.bias", [128]], ["up1.conv.double_conv.4.weight", [128]], ["up1.conv.double_conv.4.bias", [128]], ["up2.conv.double_conv.0.weight", [128, 256, 3, 3, 3]], ["up2.conv.double_conv.0.bias", [128]], ["up2.conv.double_conv.1.weight", [128]], ["up2.conv.double_conv.1.bias", [128]], ["up2.conv.double_conv.3.weight", [64, 128, 3, 3, 3]], ["up2.conv.double_conv.3.bias", [64]], ["up2.conv.double_conv.4.weight", [64]], ["up2.conv.double_conv.4.bias", [64]], ["up3.conv.double_conv.0.weight", [64, 128, 3, 3, 3]], ["up3.conv.double_conv.0.bias", [64]], ["up3.conv.double_conv.1.weight", [64]], ["up3.conv.double_conv.1.bias", [64]], ["up3.conv.double_conv.3.weight", [32, 64, 3, 3, 3]], ["up3.conv.double_conv.3.bias", [32]], ["up3.conv.double_conv.4.weight", [32]], ["up3.conv.double_conv.4.bias", [32]], ["up4.conv.double_conv.0.weight", [32, 64, 3, 3, 3]], ["up4.conv.double_conv.0.bias", [32]], ["up4.conv.double_conv.1.weight", [32]], ["up4.conv.double_conv.1.bias", [32]], ["up4.conv.double_conv.3.weight", [32, 32, 3, 3, 3]], ["up4.conv.double_conv.3.bias", [32]], ["up4.conv.double_conv.4.weight", [32]], ["up4.conv.double_conv.4.bias", [32]], ["outc.conv.weight", [12, 32, 1, 1, 1]], ["outc.conv.bias", [12]]], "output_shape": [[3, 12, 32, 288, 288]], "num_parameters": [864, 32, 32, 32, 27648, 32, 32, 32, 55296, 64, 64, 64, 110592, 64, 64, 64, 221184, 128, 128, 128, 442368, 128, 128, 128, 884736, 256, 256, 256, 1769472, 256, 256, 256, 1769472, 256, 256, 256, 1769472, 256, 256, 256, 3538944, 256, 256, 256, 884736, 128, 128, 128, 884736, 128, 128, 128, 221184, 64, 64, 64, 221184, 64, 64, 64, 55296, 32, 32, 32, 55296, 32, 32, 32, 27648, 32, 32, 32, 384, 12]}], "edges": []}